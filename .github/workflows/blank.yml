# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: Force Clean Repository Directory (Fix Permissions)
        run: |
          docker run --rm -v "$PWD":/project bash:latest chown --recursive $(id -u):$(id -g) /project

      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Run Dockerized Gradle Build
        run: |
          docker run --rm --user $(id -u):$(id -g) -v "$PWD":/workspace -w /workspace gradle:8.9-jdk17 gradle clean build
      - name: Preventive Cleanup
        run: |
          docker stop little_devoop || true
          docker rm little_devoop || true
          docker rmi devoops:latest || true
      - name: Docker image
        run: docker image build -t devoops:latest .

      - name: Run container
        run: docker run -d --name little_devoop -p 8080:8080 --restart unless-stopped --network host devoops:latest

      - name: Production container
        run: docker run -d --name little_devoop --restart always -p 1871:8080 devoops:latest

      - name: String comparison 
        run: |
          sleep 10
          EXPECTED_VALUE="It works!"
          ACTUAL_VALUE=$(curl -S "http://localhost:8080/endpoint")
          if [ "$EXPECTED_VALUE" = "$ACTUAL_VALUE" ]; then
            exit 0
          else
            exit 1
          fi

      - name: Docker Tag
        run: docker tag devoops:latest 10.0.40.193:5000/team7-devoops:latest

      - name: Docker push
        run: docker push 10.0.40.193:5000/team7-devoops:latest

      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: "http://10.0.40.193:9000"
          SONAR_TOKEN: "sqp_5ab942c1daa7e17ac6cde8dac8c0893bfd7f75e1"
        run: |
          docker run --rm \
            -e SONAR_HOST_URL="$SONAR_HOST_URL" \
            -e SONAR_TOKEN="$SONAR_TOKEN" \
            -v "$PWD:/usr/src" \
            -w /usr/src \
            sonarsource/sonar-scanner-cli \
              -Dsonar.projectKey=team7 \
              -Dsonar.projectName=team7 \
              -Dsonar.sources=src \
              -Dsonar.exclusions="**/.gradle/**,**/build/**,**/.git/**" \
              -Dsonar.java.binaries="build/classes"

      - name: Build mkdocs
        run: |
          docker run --rm -u $(id -u):$(id -g) -v ${PWD}:/docs squidfunk/mkdocs-material build
      
      - name: Build PDF with Pandoc
        run: |
          mkdir -p site
          docker run --rm \
          -u $(id -u):$(id -g) \
          -v ${PWD}:/docs \
          -w /docs \
          pandoc/latex:latest \
          README.md docs/about.md -o site/documentation.pdf

      - name: Build Nginx Docs Image
        run: docker build -t docs:latest -f docs/dockerfile .

      - name: Run Nginx Docs Container
        run: |
          docker stop little_docs || true
          docker rm little_docs || true
          docker run -d --name little_docs -p 8001:80 docs:latest
        
      - name: Production Nginx
        run : docker run -d --name little_docs --restart always -p 1872:80 docs:latest

      - name: Nginx Tag
        run: docker tag docs:latest 10.0.40.193:5000/team7-docs:latest

      - name: Nginx Push
        run: docker push 10.0.40.193:5000/team7-docs:latest
      
      - name: Check PDF exists
        run: |
          echo "Checking if PDF was created..."
          ls -lh site/

      


              
    #  - name: Stop container
    #    run: docker stop little_devoop

     # - name: Cleanup container
      #  run: |
       #   docker stop little_devoop || true
        #  docker rm little_devoop || true
        #  docker rmi devoops:latest || true

